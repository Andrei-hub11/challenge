services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: telemetry_db
      POSTGRES_USER: telemetry_user
      POSTGRES_PASSWORD: telemetry_P0stgr3s_2025!
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "telemetry_user", "-d", "telemetry_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:latest
    command: ["-js", "-m", "8222"]
    ports:
      - "4222:4222"
      - "8222:8222"
    healthcheck:
      test: ["CMD", "nats-server", "--help"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_PORT=5432
      - NATS_URL=nats://nats:4222
      - SERVER_PORT=8080
      - GO_ENV=production
      - JWT_SECRET=your-super-secret-jwt-key-256-bits-long-for-production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 3
    command: ["./api"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_PORT=5432
      - NATS_URL=nats://nats:4222
      - GO_ENV=production
    command: ["./worker"]

volumes:
  postgres_data:

